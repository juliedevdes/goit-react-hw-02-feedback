{"version":3,"sources":["components/Notification/Notification.js","components/Statisctics.js/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["Notification","message","Statistics","this","props","total","good","neutral","bad","positivePercentage","React","Component","defaultProps","FeedbackOptions","options","map","option","onClick","onLeaveFeedback","Section","title","children","App","state","countTotalFeedback","countPositiveFeedbackPercentage","handleGood","setState","prevState","handleNeu","handleBad","Good","Neutral","Bad","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAAe,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICEQC,E,4JAUnB,WACE,OAAyB,IAArBC,KAAKC,MAAMC,MACN,cAACL,EAAD,CAAcC,QAAQ,sBAG3B,8BACE,+BACE,wCAAWE,KAAKC,MAAME,QACtB,2CAAcH,KAAKC,MAAMG,WACzB,uCAAUJ,KAAKC,MAAMI,OACrB,yCAAYL,KAAKC,MAAMC,SACvB,uDAA0BF,KAAKC,MAAMK,mBAArC,iB,GArB4BC,IAAMC,WAAzBT,EACZU,aAAe,CACpBN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLH,MAAO,EACPI,mBAAoB,G,ICPHI,E,4JAOnB,WAAU,IAAD,OACP,OACE,6BACGV,KAAKC,MAAMU,QAAQC,KAAI,SAACC,GAAD,OACtB,6BACE,wBAAQC,QAAS,EAAKb,MAAMc,gBAAgBF,GAA5C,SACGA,KAFIA,Y,GAX0BN,IAAMC,WCFpC,SAASQ,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KDFcR,EACZD,aAAe,CACpBE,QAAS,I,IEGPQ,E,4MACJC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,mBAAqB,kBACnB,EAAKD,MAAMjB,KAAO,EAAKiB,MAAMf,IAAM,EAAKe,MAAMhB,S,EAEhDkB,gCAAkC,kBAC/B,EAAKF,MAAMjB,KAAO,EAAKkB,qBAAwB,K,EAElDE,WAAa,WACX,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEtB,KAAOsB,EAAUtB,MAAQ,O,EAG3DuB,UAAY,WACV,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAAErB,QAAUqB,EAAUrB,SAAW,O,EAGjEuB,UAAY,WACV,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAAEpB,IAAMoB,EAAUpB,KAAO,O,4CAGzD,WACE,OACE,gCACE,cAACW,EAAD,CAASC,MAAM,6BAAf,SACE,cAAC,EAAD,CACEN,QAAS,CAAC,OAAQ,UAAW,OAC7BI,gBAAiB,CACfa,KAAM5B,KAAKuB,WACXM,QAAS7B,KAAK0B,UACdI,IAAK9B,KAAK2B,eAIhB,cAACX,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACEd,KAAMH,KAAKoB,MAAMjB,KACjBC,QAASJ,KAAKoB,MAAMhB,QACpBC,IAAKL,KAAKoB,MAAMf,IAChBH,MAAOF,KAAKqB,qBACZf,mBACEyB,KAAKC,MAAMhC,KAAKsB,oCAAsC,a,GA7ClDf,IAAMC,WAsDTW,ICjDAc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39b4175f.chunk.js","sourcesContent":["export default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n","import React from \"react\";\nimport Notification from \"../Notification/Notification.js\";\n\nexport default class Statistics extends React.Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n  // static propTypes = {};\n\n  render() {\n    if (this.props.total === 0) {\n      return <Notification message=\"No feedback given\" />;\n    } else {\n      return (\n        <div>\n          <ul>\n            <li>Good: {this.props.good}</li>\n            <li>Neutral: {this.props.neutral}</li>\n            <li>Bad: {this.props.bad}</li>\n            <li>Total: {this.props.total}</li>\n            <li>Positive percentage: {this.props.positivePercentage} %</li>\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\n\nexport default class FeedbackOptions extends React.Component {\n  static defaultProps = {\n    options: [],\n  };\n\n  // static propTypes = {};\n\n  render() {\n    return (\n      <ul>\n        {this.props.options.map((option) => (\n          <li key={option}>\n            <button onClick={this.props.onLeaveFeedback[option]}>\n              {option}\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\n\nimport Statistics from \"./components/Statisctics.js/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.bad + this.state.neutral;\n\n  countPositiveFeedbackPercentage = () =>\n    (this.state.good / this.countTotalFeedback()) * 100;\n\n  handleGood = () => {\n    this.setState((prevState) => ({ good: (prevState.good += 1) }));\n  };\n\n  handleNeu = () => {\n    this.setState((prevState) => ({ neutral: (prevState.neutral += 1) }));\n  };\n\n  handleBad = () => {\n    this.setState((prevState) => ({ bad: (prevState.bad += 1) }));\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={[\"Good\", \"Neutral\", \"Bad\"]}\n            onLeaveFeedback={{\n              Good: this.handleGood,\n              Neutral: this.handleNeu,\n              Bad: this.handleBad,\n            }}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={\n              Math.round(this.countPositiveFeedbackPercentage()) || 0\n            }\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}